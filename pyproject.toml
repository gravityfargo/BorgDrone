[tool.poetry]
name = "borgdrone"
version = "0.0.0-post.62+52da5e6"
description = "Advanced web interface for BorgBackup"
authors = ["Nathan Price <gravityfargo@gmail.com>"]
license = "BSD-4-Clause"
readme = "README.md"
package-mode = false
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: System Administrators",
    "Topic :: System :: Archiving :: Backup",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = "^3.12"
python-dotenv = "^1.0.1"
Flask-SQLAlchemy = "^3.1.1"
Flask-Login = "^0.6.3"
Flask-SocketIO = "^5.3.7"
Flask-Migrate = "^4.0.7"
cron-descriptor = "^1.4.5"
poetry-dynamic-versioning = { extras = ["plugin"], version = "^1.4.1" }
pyyaml = "^6.0.2"
flask = "^3.0.3"

[tool.poetry.group.dev.dependencies]
pylint = "^3.2.7"
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
isort = "^5.13.2"
black = "^24.8.0"

[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"


[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[tool.poetry-dynamic-versioning.files."borgdrone/_version.py"]
persistent-substitution = true
initial-content = """
  # These version placeholders will be replaced later during substitution.
  __version__ = "0.0.0"
  __version_tuple__ = (0, 0, 0)
"""

[tool.pylint.main]
output-format = "colorized"

[tool.pylint.format]
max-line-length = "120"

[tool.pylint."messages control"]
disable = [
    "C0103", # invalid-name
    "C0114", # missing-module-docstring
    "C0115", # missing-class-docstring
    "C0116", # missing-function-docstring
    "C0413", # wrong-import-position
    "C0415", # import-outside-toplevel
    "R0902", # too-many-instance-attributes
    "R0903", # too-few-public-methods
    "R0913", # too-many-arguments
    "W0105", # string statement has no effect
    "W0201", # attribute-defined-outside-init
    "W0613", # unused-argument
    "W0718", # broad-exception-caught
    "W0511", # fixme

]

[tool.pylint.'tests/']
disable = [
    "W0611", # unused-import
    "W0621", # redefined-outer-name
]

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pyright]
reportAttributeAccessIssue = false

[tool.pytest.ini_options]
addopts = "--cov=borgdrone --cov-report=xml --no-header --maxfail=1 --capture=no -rA"
testpaths = ["tests"]
# TODO: Remove this once flask_login is updated
filterwarnings = "ignore::DeprecationWarning"
