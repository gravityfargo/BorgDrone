[project]
name = "borgdrone"
dynamic = ["version"]
authors = [{ name = "gravityfargo", email = "gravityfargo@gmail.com" }]
maintainers = [{ name = "gravityfargo", email = "gravityfargo@gmail.com" }]
description = "Browser-based user interface for BorgBackup"
license = { text = "BSD" }
requires-python = ">=3.12"
keywords = ["backup", "borgbackup"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: BSD License",
    "Operating System :: POSIX :: BSD :: FreeBSD",
    "Operating System :: POSIX :: BSD :: OpenBSD",
    "Operating System :: POSIX :: BSD :: NetBSD",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security :: Cryptography",
    "Topic :: System :: Archiving :: Backup",
]
dependencies = [
    "Flask",
    "python-dotenv",
    "flask-sqlalchemy",
    "flask-login",
    "flask-socketio",
    "Flask-Migrate",
    "cron-descriptor",
]

[project.optional-dependencies]
DEV = ["pylint", "flake8", "pyproject-flake8", "pytest", "pytest-cov", "djlint", "isort", "black"]


[project.urls]
"Bug Tracker" = "https://github.com/borgbackup/borgdrone/issues"
"Documentation" = "https://borgdrone.readthedocs.io/en/latest/"
"Repository" = "https://github.com/borgbackup/borgdrone"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8", "wheel", "pkgconfig", "Cython>=3.0.3"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
version_file = "src/borgdrone/_version.py"
write_to_template = "__version__ = version = {version!r}\n"

[tool.pylint.main]
output-format = "colorized"


[tool.pylint.format]
max-line-length = "120"

[tool.pylint."messages control"]
disable = [
    "C0103", # invalid-name
    "C0114", # missing-module-docstring
    "C0115", # missing-class-docstring
    "C0116", # missing-function-docstring
    "C0413", # wrong-import-position
    "C0415", # import-outside-toplevel
    "R0902", # too-many-instance-attributes
    "R0903", # too-few-public-methods
    "R0913", # too-many-arguments
    "W0105", # string statement has no effect
    "W0201", # attribute-defined-outside-init
    "W0613", # unused-argument
    "W0718", # broad-exception-caught
    "W0511", # fixme

]

[tool.flake8]
max-line-length = 120
ignore = [
    "E402", # module level import not at top of file
    "E501",
    "F401", # imported but unused
    "F841", # local variable is assigned to but never used
    "E266", # too many leading '#' for block comment
]

[tool.djlint]
# Inline styles should be avoided. (H021)
ignore = "H021"

[tool.pytest.ini_options]
log_cli_level = "INFO"
log_cli = true
addopts = "--exitfirst --cov=borgdrone --cov-report xml"
testpaths = ["tests"]
# TODO: Remove this once flask_login is updated
filterwarnings = "ignore::DeprecationWarning"

[tool.pyright]
reportAttributeAccessIssue = false

[tool.isort]
profile = "black"
